/*
 * This file is generated by jOOQ.
 */
package ca.softwarespace.qiyanna.dataaggregator.models.generated.tables;


import ca.softwarespace.qiyanna.dataaggregator.models.generated.Indexes;
import ca.softwarespace.qiyanna.dataaggregator.models.generated.Keys;
import ca.softwarespace.qiyanna.dataaggregator.models.generated.Qiyanna;
import ca.softwarespace.qiyanna.dataaggregator.models.generated.tables.records.SummonerRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Summoner extends TableImpl<SummonerRecord> {

    private static final long serialVersionUID = 35997792;

    /**
     * The reference instance of <code>qiyanna.summoner</code>
     */
    public static final Summoner SUMMONER = new Summoner();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SummonerRecord> getRecordType() {
        return SummonerRecord.class;
    }

    /**
     * The column <code>qiyanna.summoner.accountid</code>.
     */
    public final TableField<SummonerRecord, String> ACCOUNTID = createField("accountid", org.jooq.impl.SQLDataType.VARCHAR(56).nullable(false), this, "");

    /**
     * The column <code>qiyanna.summoner.name</code>.
     */
    public final TableField<SummonerRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>qiyanna.summoner.puuid</code>.
     */
    public final TableField<SummonerRecord, String> PUUID = createField("puuid", org.jooq.impl.SQLDataType.VARCHAR(78), this, "");

    /**
     * The column <code>qiyanna.summoner.profileiconid</code>.
     */
    public final TableField<SummonerRecord, Integer> PROFILEICONID = createField("profileiconid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>qiyanna.summoner.summonerlevel</code>.
     */
    public final TableField<SummonerRecord, Long> SUMMONERLEVEL = createField("summonerlevel", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>qiyanna.summoner.revisiondate</code>.
     */
    public final TableField<SummonerRecord, Long> REVISIONDATE = createField("revisiondate", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>qiyanna.summoner.summonerid</code>.
     */
    public final TableField<SummonerRecord, String> SUMMONERID = createField("summonerid", org.jooq.impl.SQLDataType.VARCHAR(63), this, "");

    /**
     * Create a <code>qiyanna.summoner</code> table reference
     */
    public Summoner() {
        this(DSL.name("summoner"), null);
    }

    /**
     * Create an aliased <code>qiyanna.summoner</code> table reference
     */
    public Summoner(String alias) {
        this(DSL.name(alias), SUMMONER);
    }

    /**
     * Create an aliased <code>qiyanna.summoner</code> table reference
     */
    public Summoner(Name alias) {
        this(alias, SUMMONER);
    }

    private Summoner(Name alias, Table<SummonerRecord> aliased) {
        this(alias, aliased, null);
    }

    private Summoner(Name alias, Table<SummonerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Summoner(Table<O> child, ForeignKey<O, SummonerRecord> key) {
        super(child, key, SUMMONER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Qiyanna.QIYANNA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SUMMONER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SummonerRecord> getPrimaryKey() {
        return Keys.SUMMONER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SummonerRecord>> getKeys() {
        return Arrays.<UniqueKey<SummonerRecord>>asList(Keys.SUMMONER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Summoner as(String alias) {
        return new Summoner(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Summoner as(Name alias) {
        return new Summoner(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Summoner rename(String name) {
        return new Summoner(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Summoner rename(Name name) {
        return new Summoner(name, null);
    }
}
